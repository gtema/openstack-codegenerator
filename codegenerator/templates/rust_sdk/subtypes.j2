{%- import 'rust_macros.j2' as macros with context -%}
{%- for subtype in type_manager.get_subtypes() %}
{{ macros.docstring(subtype.description, indent=0) }}
{{ type_manager.get_subtype_derive_macros(subtype) }}
{{ subtype.base_type }} {{ subtype.name }}{{ ("<" + ",".join(subtype.lifetimes) + ">") if subtype.lifetimes else ""}} {
  {%- if subtype["fields"] is defined %}
  {#- Struct fields #}
  {%- for field in subtype.fields.values() %}
    {{ macros.docstring(field.description, indent=4) }}
    {{ type_manager.get_subtype_field_serde_macros(field) }}
    {{ field.local_name }}: {{ field.type_hint }},
  {%- endfor %}
  {%- elif subtype["kinds"] is defined %}
  {#- Enum kinds #}
  {%- for name, kind in subtype.kinds.items() %}
    {{- macros.docstring(kind.description, indent=4) }}
    {{ name }}({{ kind.type_hint }}),
  {%- endfor %}
  {%- endif %}
}
{%- endfor %}
