{#- Template to represent the root request structure -#}
{%- import 'rust_macros.j2' as macros with context -%}
{%- with data_type = type_manager.get_root_data_type() %}

{%- if data_type.__class__.__name__ == "Struct" %}
#[derive(Builder, Debug, Clone)]
#[builder(setter(strip_option))]
pub struct {{ data_type.name  }}{{ type_manager.get_request_static_lifetimes(data_type) }} {
  {%- for field in data_type.fields.values() %}
    {{ macros.docstring(field.description, indent=4) }}
    {{ field.builder_macros }}
    pub(crate) {{ field.local_name }}: {{ field.type_hint }},
  {%- endfor %}

{%- for k, param in type_manager.parameters.items() %}
    {{ macros.docstring(param.description, indent=4) }}
    {{ param.builder_macros }}
    {{ param.local_name }}: {{ param.type_hint }},
{%- endfor %}

{% if is_json_patch %}
    /// Patch data
    #[builder()]
    patch: Patch,
{%- endif %}

    #[builder(setter(name = "_headers"), default, private)]
    _headers: Option<HeaderMap>,

  {%- if data_type.additional_fields_type %}
    #[builder(setter(name = "_properties"), default, private)]
    _properties: BTreeMap<Cow<'a, str>, {{ data_type.additional_fields_type.type_hint }}>,
  {%- endif %}
}

{%- elif data_type.__class__.__name__ == "BTreeMap" %}
#[derive(Builder, Debug, Clone)]
#[builder(setter(strip_option))]
pub struct Request{{ type_manager.get_request_static_lifetimes(data_type) }} {
{%- for k, param in type_manager.parameters.items() %}
    {{ macros.docstring(param.description, indent=4) }}
    {{ param.builder_macros }}
    {{ param.local_name }}: {{ param.type_hint }},
{%- endfor %}

    #[builder(setter(name = "_headers"), default, private)]
    _headers: Option<HeaderMap>,

    #[builder(setter(name = "_properties"), default, private)]
    _properties: BTreeMap<Cow<'a, str>, {{ data_type.value_type.type_hint }}>,
}


{%- endif %}
{%- endwith %}
